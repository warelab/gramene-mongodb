// full text indexes for string search
// db.genetree.createIndex({"$**":"text"});
// db.GO.createIndex({"$**":"text"});
// db.PO.createIndex({"$**":"text"});
// db.taxonomy.createIndex({"$**":"text"});
// db.domains.createIndex({"$**":"text"});
// db.pathways.createIndex({"$**":"text"});
// db.maps.createIndex({"$**":"text"});

// slimmed down text index for genes collection
// db.genes.createIndex(
// 	{
// 		"_id": "text",
// 		"name": "text",
// 		"description": "text",
// 		"synonyms": "text",
// 		"homology.gene_tree.representative.model.name": "text",
// 		"homology.gene_tree.representative.model.description": "text",
// 		"homology.gene_tree.representative.closest.name": "text",
// 		"homology.gene_tree.representative.closest.description": "text"
// 	},
// 	{
// 		weights: {
// 			name: 10,
// 			description: 5,
// 			synonyms: 5
// 		},
// 		name: "geneTextIndex"
// 	}
// );

// location based index for dumping sorted genes for solr
db.genes.createIndex({'species_idx':1,'db_type':1,'gene_idx':1});

// gene tree index for adding domain annotations to gene tree leaf nodes
db.genes.createIndex({'homology.gene_tree.id':1});

// gene tree index so we can extract trees based on the compara_db name
// db.genetree.createIndex({'compara_db':1});

// location based index for dumping sorted bed files
db.genes.createIndex({'taxon_id':1,'db_type':1,'gene_idx':1});

// subset index for taxonomy collection
db.taxonomy.createIndex({'subset':1});
